"""add_is_setup_complete_to_user

Revision ID: 568a9c9e88d4
Revises: dd4b00c23094
Create Date: 2025-05-25 10:19:52.516435

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '568a9c9e88d4'
down_revision = 'dd4b00c23094'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    """Upgrade database schema by altering column types and adding a new column."""
    op.alter_column('prompt_versions', 'content',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.alter_column('prompts', 'content',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    
    # Fix: Add NOT NULL column safely for existing data
    # Step 1: Add nullable column first
    op.add_column('user', sa.Column('is_setup_complete', sa.Boolean(), nullable=True))
    
    # Step 2: Set default value for existing users
    op.execute('UPDATE "user" SET is_setup_complete = false WHERE is_setup_complete IS NULL')
    
    # Step 3: Add NOT NULL constraint
    op.alter_column('user', 'is_setup_complete', nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    """Reverts database changes by dropping a column and altering column types."""
    op.drop_column('user', 'is_setup_complete')
    op.alter_column('prompts', 'content',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('prompt_versions', 'content',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
    # ### end Alembic commands ###
