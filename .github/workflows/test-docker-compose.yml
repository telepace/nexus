name: Test Docker Compose

on:
  push:
    branches:
      - main
  pull_request_target:
    types:
      - opened
      - synchronize
jobs:
  test-docker-compose:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show current user and docker access
        run: |
          echo "Running as user: $(whoami)"
          echo "Docker access test:"
          docker ps || echo "Docker access failed"

      - name: Copy example env file
        run: cp .env.example .env

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Setup Doppler project & download secrets to .env
        run: |
          doppler setup --silent --project nexus --config stg
          doppler secrets download --no-file --format env > .env

        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_STAGING }}

      - name: Build and test services
        run: |
          docker compose down -v --remove-orphans
          docker compose build
          docker compose up -d --wait backend frontend admin pgadmin

      - name: Test backend is up
        run: curl http://localhost:8000/api/v1/utils/health-check

      - name: Test frontend is up
        run: curl http://localhost:5173

      - name: Test admin is up
        run: curl http://localhost:3000

      - name: Clean up
        run: docker compose down -v --remove-orphans
