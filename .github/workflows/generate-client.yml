# .github/workflows/generate-client.yml
name: Generate Client

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  generate-client:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository && github.head_ref || '' }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.9.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          enable-cache: true

      - name: Install Frontend Dependencies
        run: pnpm install
        working-directory: frontend

      - name: Install Admin Dependencies
        run: pnpm install
        working-directory: admin

      - name: Install Backend Dependencies
        run: |
          uv sync
          source .venv/bin/activate
          pip install .
        working-directory: backend

      - name: Generate Client
        run: |
          make generate-client || {
            echo "❌ Failed to run generate-client.sh script."
            exit 1
          }
        env:
          ENVIRONMENT: production
          SECRET_KEY: just-for-generating-client-openapi
          POSTGRES_PASSWORD: just-for-generating-client-openapi
          FIRST_SUPERUSER_PASSWORD: just-for-generating-client-openapi
          SENTRY_DSN: ""
          POSTHOG_API_KEY: ""
          POSTHOG_HOST: ""
          VIRTUAL_ENV: .venv

      - name: Configure Git User
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Stage Generated Files
        run: |
          git add frontend/app/openapi-client
          git add admin/src/client

      # 7. Handle Changes for Same-Repo Events (Push/PR from same repo)
      - name: Commit and Push Changes (Same Repo)
        # Run only if it's NOT a PR from a fork
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        run: |
          # Check if there are staged changes
          if ! git diff --staged --quiet; then
            echo "✅ Changes detected in generated client. Committing and pushing..."
            # Pull before pushing to avoid conflicts if possible (optional)
            # git pull --ff-only origin ${{ github.head_ref || github.ref_name }}
            git commit -m "ci: ✨ Autogenerate frontend client"
            git push origin HEAD:${{ github.head_ref || github.ref_name }}
          else
            echo "✅ No changes detected in generated client."
          fi
        env:
          # GITHUB_TOKEN has write permissions for same-repo events by default
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

      # 8. Handle Changes for Fork PRs (Warn, Don't Fail)
      - name: Check for Uncommitted Changes (Fork PRs)
        # Run only if it IS a PR from a fork
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
        run: |
          # Check if there are staged changes that were generated
          if ! git diff --staged --quiet; then
            echo "⚠️ Changes detected in generated client."
            echo "➡️ Please run 'bash scripts/generate-client.sh' locally and commit the changes to this PR."
            # Optionally, use GitHub annotations for better visibility in the PR
            echo "::warning title=Generated Client Changes Detected::Please run 'bash scripts/generate-client.sh' locally and commit the changes to this PR."
            # DO NOT exit 1 - Allow the workflow to continue
          else
            echo "✅ No changes detected in generated client."
          fi