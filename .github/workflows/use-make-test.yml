name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

jobs:
  ci-pipeline:
    name: Complete CI/CD Pipeline
    runs-on: ubuntu-latest
    
    steps:
      # ========== 代码检出 ==========
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # ========== 环境设置 ==========
      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          
      - name: Setup UV package manager
        uses: astral-sh/setup-uv@v5
        
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      # ========== 基础依赖安装 ==========
      - name: Install Python base dependencies
        run: pip install pyyaml
        
      # ========== 前端依赖安装 ==========
      - name: Install frontend dependencies
        if: hashFiles('frontend/package.json') != ''
        run: pnpm install --dir frontend
        
      - name: Install admin dependencies  
        if: hashFiles('admin/package.json') != ''
        run: pnpm install --dir admin
        
      - name: Install extension dependencies
        if: hashFiles('extension/package.json') != ''
        run: pnpm install --dir extension
        
      - name: Setup backend virtual environment
        run: |
          cd backend
          uv venv .venv
          source .venv/bin/activate
          uv sync
          
      - name: Run environment initialization
        run: make env-init
        
      - name: Check for conflicts
        run: make check-conflicts
        
      - name: Format code
        run: make format
        
      - name: Run linting
        run: make lint
        
      - name: Build backend
        run: make backend-build
        
      - name: Build frontend
        run: make frontend-build
        
      - name: Build admin
        run: make admin-build
        
      - name: Generate client
        run: make generate-client
        
      - name: Run frontend tests
        run: make frontend-test
        
      - name: Final validation
        run: |
          echo "===========> All CI/CD steps completed successfully"
          echo "✅ Environment initialized"
          echo "✅ No conflicts detected" 
          echo "✅ Code formatted"
          echo "✅ Linting passed"
          echo "✅ All components built"
          echo "✅ Client generated"
          echo "✅ All frontend passed"