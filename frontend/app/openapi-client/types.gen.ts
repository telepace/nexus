// This file is auto-generated by @hey-api/openapi-ts

export type ApiResponse_dict_str__Any__ = {
  data: {
    [key: string]: unknown;
  };
  message?: string;
  meta?: {
    [key: string]: unknown;
  } | null;
};

export type ApiResponse_list_dict_str__Any___ = {
  data: Array<{
    [key: string]: unknown;
  }>;
  message?: string;
  meta?: {
    [key: string]: unknown;
  } | null;
};

export type ApiResponse_NoneType_ = {
  data?: unknown | null;
  meta?: {
    [key: string]: unknown;
  } | null;
  error?: string | null;
};

export type ApiResponse_SmartRoutingResponse_ = {
  data: SmartRoutingResponse;
  message?: string;
  meta?: {
    [key: string]: unknown;
  } | null;
};

export type app__schemas__common__ApiResponse_ProjectPublic_ = {
  data: ProjectPublic;
  message?: string;
  meta?: {
    [key: string]: unknown;
  } | null;
};

export type app__schemas__common__ApiResponse_ProjectsPublic_ = {
  data: ProjectsPublic;
  message?: string;
  meta?: {
    [key: string]: unknown;
  } | null;
};

export type app__utils__response__ApiResponse_ProjectPublic_ = {
  data?: unknown | null;
  meta?: {
    [key: string]: unknown;
  } | null;
  error?: string | null;
};

export type app__utils__response__ApiResponse_ProjectsPublic_ = {
  data?: unknown | null;
  meta?: {
    [key: string]: unknown;
  } | null;
  error?: string | null;
};

export type Body_chat_create_chat_completion = {
  /**
   * Chat messages in OpenAI format
   */
  messages: Array<{
    [key: string]: unknown;
  }>;
  /**
   * Model to use
   */
  model?: string;
  /**
   * Whether to stream the response
   */
  stream?: boolean;
  /**
   * Sampling temperature
   */
  temperature?: number;
  /**
   * Maximum tokens to generate
   */
  max_tokens?: number;
};

export type Body_content_analyze_content_ai_sdk = {
  /**
   * Analysis instruction/prompt
   */
  user_prompt: string;
  /**
   * Model to use
   */
  model?: string;
  /**
   * Sampling temperature
   */
  temperature?: number;
  /**
   * Maximum tokens to generate
   */
  max_tokens?: number;
};

export type Body_content_analyze_content_stream = {
  /**
   * System prompt for analysis
   */
  system_prompt: string;
  /**
   * User prompt (content text)
   */
  user_prompt: string;
};

export type Body_content_content_completion_stream = {
  /**
   * Analysis prompt
   */
  prompt: string;
  /**
   * Model to use
   */
  model?: string;
  /**
   * Sampling temperature
   */
  temperature?: number;
  /**
   * Maximum tokens to generate
   */
  max_tokens?: number;
};

export type Body_login_login_access_token = {
  grant_type?: string | null;
  username: string;
  password: string;
  scope?: string;
  client_id?: string | null;
  client_secret?: string | null;
};

export type CompletionRequest = {
  model?: string | null;
  messages: Array<LLMMessage>;
  temperature?: number | null;
  max_tokens?: number | null;
  stream?: boolean | null;
  top_p?: number | null;
  stop?: string | Array<string> | null;
  presence_penalty?: number | null;
  frequency_penalty?: number | null;
  logit_bias?: {
    [key: string]: number;
  } | null;
  user?: string | null;
  metadata?: {
    [key: string]: string;
  } | null;
  api_key?: string | null;
};

export type ContentItemCreate = {
  type: string;
  source_uri?: string | null;
  title?: string | null;
  summary?: string | null;
  content_text?: string | null;
};

export type ContentItemPublic = {
  type: string;
  source_uri?: string | null;
  title?: string | null;
  summary?: string | null;
  id: string;
  user_id: string;
  processing_status: string;
  content_text?: string | null;
  created_at: string;
  updated_at: string;
};

export type ContentShareCreate = {
  expires_at?: string | null;
  max_access_count?: number | null;
  password?: string | null;
};

export type ContentSharePublic = {
  id: string;
  share_token: string;
  created_at: string;
  expires_at?: string | null;
  is_active: boolean;
};

export type EmbeddingData = {
  object: string;
  embedding: Array<number>;
  index: number;
};

export type EmbeddingRequest = {
  input: string | Array<string>;
  model: string;
  user?: string | null;
  api_key?: string | null;
};

export type EmbeddingResponse = {
  object: string;
  data: Array<EmbeddingData>;
  model: string;
  usage: EmbeddingUsage;
};

export type EmbeddingUsage = {
  prompt_tokens: number;
  total_tokens: number;
};

export type GoogleCallbackRequest = {
  token: string;
  user_info: {
    [key: string]: unknown;
  };
};

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type ImageCreate = {
  source_url?: string | null;
  s3_key?: string | null;
  type?: string | null;
  size?: number | null;
  format?: string | null;
  alt_text?: string | null;
  importance?: string | null;
  is_accessible?: boolean | null;
};

export type ImageResponse = {
  source_url?: string | null;
  s3_key?: string | null;
  type?: string | null;
  size?: number | null;
  format?: string | null;
  alt_text?: string | null;
  importance?: string | null;
  is_accessible?: boolean | null;
  id: string;
  owner_id: string;
  created_at: string;
  updated_at: string;
  last_checked?: string | null;
};

export type InputVariable = {
  name: string;
  description?: string | null;
  required?: boolean;
};

export type LLMMessage = {
  role: string;
  content: string;
};

export type Message = {
  message: string;
};

export type NewPassword = {
  token: string;
  new_password: string;
};

export type PresignedURLRequest = {
  filename: string;
  content_type: string;
};

export type PresignedURLResponse = {
  presigned_url: string;
  s3_key: string;
};

export type PrivateUserCreate = {
  email: string;
  password: string;
  full_name: string;
  is_verified?: boolean;
};

/**
 * 创建项目的请求模型
 */
export type ProjectCreate = {
  title: string;
  description?: string | null;
  project_type?: string;
  is_active?: boolean;
  ai_context?: {
    [key: string]: unknown;
  };
};

/**
 * 公开的项目信息
 */
export type ProjectPublic = {
  title: string;
  description?: string | null;
  project_type?: string;
  is_active?: boolean;
  ai_context?: {
    [key: string]: unknown;
  };
  id: string;
  owner_id: string;
  created_at: string;
  updated_at: string;
};

/**
 * 项目列表响应模型
 */
export type ProjectsPublic = {
  data: Array<ProjectPublic>;
  count: number;
};

/**
 * 更新项目的请求模型
 */
export type ProjectUpdate = {
  title?: string | null;
  description?: string | null;
  project_type?: string | null;
  is_active?: boolean | null;
  ai_context?: {
    [key: string]: unknown;
  } | null;
};

export type Prompt = {
  name: string;
  description?: string | null;
  content: string;
  type: PromptType;
  input_vars?: Array<InputVariable> | null;
  visibility: Visibility;
  meta_data?: {
    [key: string]: unknown;
  } | null;
  version?: number;
  /**
   * 是否启用该提示词
   */
  enabled?: boolean;
  team_id?: string | null;
  id?: string;
  created_at?: string;
  updated_at?: string;
  embedding?: Array<number> | null;
  created_by: string;
};

export type PromptCreate = {
  name: string;
  description?: string | null;
  content: string;
  type: PromptType;
  input_vars?: Array<InputVariable> | null;
  visibility: Visibility;
  meta_data?: {
    [key: string]: unknown;
  } | null;
  version?: number;
  /**
   * 是否启用该提示词
   */
  enabled?: boolean;
  team_id?: string | null;
  tag_ids?: Array<string> | null;
};

export type PromptReadWithTags = {
  name: string;
  description?: string | null;
  content: string;
  type: PromptType;
  input_vars?: Array<InputVariable> | null;
  visibility: Visibility;
  meta_data?: {
    [key: string]: unknown;
  } | null;
  version?: number;
  /**
   * 是否启用该提示词
   */
  enabled?: boolean;
  team_id?: string | null;
  id: string;
  created_by: string;
  created_at: string;
  updated_at: string;
  embedding?: Array<number> | null;
  tags?: Array<Tag>;
};

export type PromptType = "simple" | "chat" | "template" | "system" | "function";

export type PromptUpdate = {
  name?: string | null;
  description?: string | null;
  content?: string | null;
  type?: PromptType | null;
  input_vars?: Array<InputVariable> | null;
  visibility?: Visibility | null;
  team_id?: string | null;
  meta_data?: {
    [key: string]: unknown;
  } | null;
  enabled?: boolean | null;
  tag_ids?: Array<string> | null;
};

export type PromptVersion = {
  id?: string;
  prompt_id: string;
  version: number;
  content: string;
  input_vars?: Array<InputVariable> | null;
  created_by: string;
  created_at?: string;
  change_notes?: string | null;
};

export type PromptVersionCreate = {
  content: string;
  input_vars?: Array<InputVariable> | null;
  change_notes?: string | null;
};

/**
 * 智能路由请求模型
 */
export type SmartRoutingRequest = {
  query_text: string;
  context?: {
    [key: string]: unknown;
  } | null;
};

/**
 * 智能路由响应模型
 */
export type SmartRoutingResponse = {
  recommended_project_id?: string | null;
  recommended_project_name?: string | null;
  confidence_score: number;
  reasoning: string;
  alternative_projects?: Array<{
    [key: string]: unknown;
  }>;
  should_create_new?: boolean;
  suggested_project_name?: string | null;
};

export type Tag = {
  id?: string;
  name: string;
  description?: string | null;
  color?: string | null;
  created_at?: string;
};

export type TagCreate = {
  name: string;
  description?: string | null;
  color?: string | null;
};

export type TagUpdate = {
  name?: string | null;
  description?: string | null;
  color?: string | null;
};

export type Token = {
  access_token: string;
  token_type?: string;
};

export type UpdatePassword = {
  current_password: string;
  new_password: string;
};

export type UserCreate = {
  email?: string;
  is_active?: boolean;
  is_superuser?: boolean;
  full_name?: string | null;
  avatar_url?: string | null;
  is_setup_complete?: boolean;
  password: string;
};

export type UserPublic = {
  email?: string;
  is_active?: boolean;
  is_superuser?: boolean;
  full_name?: string | null;
  avatar_url?: string | null;
  is_setup_complete?: boolean;
  id: string;
};

export type UserRegister = {
  email: string;
  password: string;
  full_name?: string | null;
};

export type UsersPublic = {
  data: Array<UserPublic>;
  count: number;
};

export type UserUpdate = {
  email?: string | null;
  is_active?: boolean;
  is_superuser?: boolean;
  full_name?: string | null;
  avatar_url?: string | null;
  is_setup_complete?: boolean;
  password?: string | null;
};

export type UserUpdateMe = {
  full_name?: string | null;
  email?: string | null;
  is_setup_complete?: boolean | null;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type Visibility = "public" | "private" | "team";

export type HealthGetHealthApiResponse = unknown;

export type HealthGetHealthApiError = unknown;

export type LoginLoginAccessTokenData = {
  body: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = Token;

export type LoginLoginAccessTokenError = HTTPValidationError;

export type LoginLoginAccessTokenHeadResponse = {
  [key: string]: unknown;
};

export type LoginLoginAccessTokenHeadError = unknown;

export type LoginTestTokenResponse = UserPublic;

export type LoginTestTokenError = unknown;

export type LoginLogoutResponse = Message;

export type LoginLogoutError = unknown;

export type LoginRecoverPasswordData = {
  path: {
    email: string;
  };
};

export type LoginRecoverPasswordResponse = Message;

export type LoginRecoverPasswordError = HTTPValidationError;

export type LoginResetPasswordData = {
  body: NewPassword;
};

export type LoginResetPasswordResponse = Message;

export type LoginResetPasswordError = HTTPValidationError;

export type LoginRecoverPasswordHtmlContentData = {
  path: {
    email: string;
  };
};

export type LoginRecoverPasswordHtmlContentResponse = string;

export type LoginRecoverPasswordHtmlContentError = HTTPValidationError;

export type UsersReadUsersData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type UsersReadUsersResponse = UsersPublic;

export type UsersReadUsersError = HTTPValidationError;

export type UsersCreateUserData = {
  body: UserCreate;
};

export type UsersCreateUserResponse = UserPublic;

export type UsersCreateUserError = HTTPValidationError;

export type UsersReadUserMeResponse = UserPublic;

export type UsersReadUserMeError = unknown;

export type UsersDeleteUserMeResponse = Message;

export type UsersDeleteUserMeError = unknown;

export type UsersReadUserMeHeadResponse = {
  [key: string]: unknown;
};

export type UsersReadUserMeHeadError = unknown;

export type UsersUpdateUserMeData = {
  body: UserUpdateMe;
};

export type UsersUpdateUserMeResponse = UserPublic;

export type UsersUpdateUserMeError = HTTPValidationError;

export type UsersUpdatePasswordMeData = {
  body: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = Message;

export type UsersUpdatePasswordMeError = HTTPValidationError;

export type UsersRegisterUserData = {
  body: UserRegister;
};

export type UsersRegisterUserResponse = UserPublic;

export type UsersRegisterUserError = HTTPValidationError;

export type UsersReadUserByIdData = {
  path: {
    user_id: string;
  };
};

export type UsersReadUserByIdResponse = UserPublic;

export type UsersReadUserByIdError = HTTPValidationError;

export type UsersUpdateUserData = {
  body: UserUpdate;
  path: {
    user_id: string;
  };
};

export type UsersUpdateUserResponse = UserPublic;

export type UsersUpdateUserError = HTTPValidationError;

export type UsersDeleteUserData = {
  path: {
    user_id: string;
  };
};

export type UsersDeleteUserResponse = Message;

export type UsersDeleteUserError = HTTPValidationError;

export type UtilsTestEmailData = {
  query: {
    email_to: string;
  };
};

export type UtilsTestEmailResponse = Message;

export type UtilsTestEmailError = HTTPValidationError;

export type UtilsHealthCheckResponse = boolean;

export type UtilsHealthCheckError = unknown;

export type ItemsReadItemsData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type ItemsReadItemsResponse =
  app__utils__response__ApiResponse_ProjectsPublic_;

export type ItemsReadItemsError = HTTPValidationError;

export type ItemsCreateProjectData = {
  body: ProjectCreate;
};

export type ItemsCreateProjectResponse =
  app__utils__response__ApiResponse_ProjectPublic_;

export type ItemsCreateProjectError = HTTPValidationError;

export type ItemsReadItemData = {
  path: {
    id: string;
  };
};

export type ItemsReadItemResponse =
  app__utils__response__ApiResponse_ProjectPublic_;

export type ItemsReadItemError = HTTPValidationError;

export type ItemsUpdateItemData = {
  body: ProjectUpdate;
  path: {
    id: string;
  };
};

export type ItemsUpdateItemResponse =
  app__utils__response__ApiResponse_ProjectPublic_;

export type ItemsUpdateItemError = HTTPValidationError;

export type ItemsDeleteItemData = {
  path: {
    id: string;
  };
};

export type ItemsDeleteItemResponse = ApiResponse_NoneType_;

export type ItemsDeleteItemError = HTTPValidationError;

export type GoogleOauthGoogleCallbackApiData = {
  body: GoogleCallbackRequest;
};

export type GoogleOauthGoogleCallbackApiResponse = unknown;

export type GoogleOauthGoogleCallbackApiError = HTTPValidationError;

export type GoogleOauthGoogleLoginData = {
  query?: {
    extension_callback?: string | null;
  };
};

export type GoogleOauthGoogleLoginResponse = unknown;

export type GoogleOauthGoogleLoginError = HTTPValidationError;

export type GoogleOauthGoogleCallbackData = {
  query?: {
    code?: string | null;
    error?: string | null;
    state?: string | null;
  };
};

export type GoogleOauthGoogleCallbackResponse = unknown;

export type GoogleOauthGoogleCallbackError = HTTPValidationError;

export type PromptsReadTagsData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type PromptsReadTagsResponse = Array<Tag>;

export type PromptsReadTagsError = HTTPValidationError;

export type PromptsCreateTagData = {
  body: TagCreate;
};

export type PromptsCreateTagResponse = Tag;

export type PromptsCreateTagError = HTTPValidationError;

export type PromptsUpdateTagData = {
  body: TagUpdate;
  path: {
    tag_id: string;
  };
};

export type PromptsUpdateTagResponse = Tag;

export type PromptsUpdateTagError = HTTPValidationError;

export type PromptsDeleteTagData = {
  path: {
    tag_id: string;
  };
};

export type PromptsDeleteTagResponse = void;

export type PromptsDeleteTagError = HTTPValidationError;

export type PromptsCreatePromptData = {
  body: PromptCreate;
};

export type PromptsCreatePromptResponse = PromptReadWithTags;

export type PromptsCreatePromptError = HTTPValidationError;

export type PromptsReadPromptsData = {
  query?: {
    limit?: number;
    order?: string;
    search?: string | null;
    skip?: number;
    sort?: string | null;
    tag_ids?: Array<string> | null;
  };
};

export type PromptsReadPromptsResponse = Array<Prompt>;

export type PromptsReadPromptsError = HTTPValidationError;

export type PromptsReadPromptData = {
  path: {
    prompt_id: string;
  };
};

export type PromptsReadPromptResponse = PromptReadWithTags;

export type PromptsReadPromptError = HTTPValidationError;

export type PromptsUpdatePromptData = {
  body: PromptUpdate;
  path: {
    prompt_id: string;
  };
  query?: {
    create_version?: boolean;
  };
};

export type PromptsUpdatePromptResponse = PromptReadWithTags;

export type PromptsUpdatePromptError = HTTPValidationError;

export type PromptsDeletePromptData = {
  path: {
    prompt_id: string;
  };
};

export type PromptsDeletePromptResponse = void;

export type PromptsDeletePromptError = HTTPValidationError;

export type PromptsReadPromptVersionsData = {
  path: {
    prompt_id: string;
  };
};

export type PromptsReadPromptVersionsResponse = Array<PromptVersion>;

export type PromptsReadPromptVersionsError = HTTPValidationError;

export type PromptsCreatePromptVersionData = {
  body: PromptVersionCreate;
  path: {
    prompt_id: string;
  };
};

export type PromptsCreatePromptVersionResponse = PromptVersion;

export type PromptsCreatePromptVersionError = HTTPValidationError;

export type PromptsReadPromptVersionData = {
  path: {
    prompt_id: string;
    version_num: number;
  };
};

export type PromptsReadPromptVersionResponse = PromptVersion;

export type PromptsReadPromptVersionError = HTTPValidationError;

export type PromptsDuplicatePromptData = {
  path: {
    prompt_id: string;
  };
};

export type PromptsDuplicatePromptResponse = Prompt;

export type PromptsDuplicatePromptError = HTTPValidationError;

export type PromptsTogglePromptEnabledData = {
  path: {
    prompt_id: string;
  };
};

export type PromptsTogglePromptEnabledResponse = PromptReadWithTags;

export type PromptsTogglePromptEnabledError = HTTPValidationError;

export type LlmCreateCompletionData = {
  body: CompletionRequest;
};

export type LlmCreateCompletionResponse = unknown;

export type LlmCreateCompletionError = HTTPValidationError;

export type LlmCreateEmbeddingData = {
  body: EmbeddingRequest;
};

export type LlmCreateEmbeddingResponse = EmbeddingResponse;

export type LlmCreateEmbeddingError = HTTPValidationError;

export type ChatCreateChatCompletionData = {
  body: Body_chat_create_chat_completion;
};

export type ChatCreateChatCompletionResponse = unknown;

export type ChatCreateChatCompletionError = HTTPValidationError;

export type ChatListAvailableModelsResponse = unknown;

export type ChatListAvailableModelsError = unknown;

export type ContentContentEventsEndpointResponse = unknown;

export type ContentContentEventsEndpointError = unknown;

export type ContentCreateContentItemEndpointData = {
  body: ContentItemCreate;
};

export type ContentCreateContentItemEndpointResponse = ContentItemPublic;

export type ContentCreateContentItemEndpointError = HTTPValidationError;

export type ContentProcessContentItemEndpointData = {
  path: {
    id: string;
  };
};

export type ContentProcessContentItemEndpointResponse = ContentItemPublic;

export type ContentProcessContentItemEndpointError = HTTPValidationError;

export type ContentListContentItemsEndpointData = {
  query?: {
    /**
     * Maximum number of items to return.
     */
    limit?: number;
    /**
     * Number of items to skip for pagination.
     */
    skip?: number;
  };
};

export type ContentListContentItemsEndpointResponse = Array<ContentItemPublic>;

export type ContentListContentItemsEndpointError = HTTPValidationError;

export type ContentGetContentItemEndpointData = {
  path: {
    id: string;
  };
};

export type ContentGetContentItemEndpointResponse = ContentItemPublic;

export type ContentGetContentItemEndpointError = HTTPValidationError;

export type ContentGetContentMarkdownEndpointData = {
  path: {
    id: string;
  };
};

export type ContentGetContentMarkdownEndpointResponse = {
  [key: string]: unknown;
};

export type ContentGetContentMarkdownEndpointError = HTTPValidationError;

export type ContentGetSupportedProcessorsResponse = unknown;

export type ContentGetSupportedProcessorsError = unknown;

export type ContentGetContentChunksEndpointData = {
  path: {
    id: string;
  };
  query?: {
    /**
     * Page number (1-based)
     */
    page?: number;
    /**
     * Number of chunks per page
     */
    size?: number;
  };
};

export type ContentGetContentChunksEndpointResponse = {
  [key: string]: unknown;
};

export type ContentGetContentChunksEndpointError = HTTPValidationError;

export type ContentGetContentChunksSummaryEndpointData = {
  path: {
    id: string;
  };
};

export type ContentGetContentChunksSummaryEndpointResponse = {
  [key: string]: unknown;
};

export type ContentGetContentChunksSummaryEndpointError = HTTPValidationError;

export type ContentAnalyzeContentStreamData = {
  body: Body_content_analyze_content_stream;
  path: {
    content_id: string;
  };
};

export type ContentAnalyzeContentStreamResponse = unknown;

export type ContentAnalyzeContentStreamError = HTTPValidationError;

export type ContentAnalyzeContentAiSdkData = {
  body: Body_content_analyze_content_ai_sdk;
  path: {
    content_id: string;
  };
};

export type ContentAnalyzeContentAiSdkResponse = unknown;

export type ContentAnalyzeContentAiSdkError = HTTPValidationError;

export type ContentContentCompletionStreamData = {
  body: Body_content_content_completion_stream;
  path: {
    content_id: string;
  };
};

export type ContentContentCompletionStreamResponse = unknown;

export type ContentContentCompletionStreamError = HTTPValidationError;

export type ContentCreateShareLinkEndpointData = {
  body: ContentShareCreate;
  path: {
    /**
     * ID of the content item to share
     */
    id: string;
  };
};

export type ContentCreateShareLinkEndpointResponse = ContentSharePublic;

export type ContentCreateShareLinkEndpointError = HTTPValidationError;

export type ContentDeactivateShareLinkEndpointData = {
  path: {
    /**
     * ID of the content item whose shares to deactivate
     */
    id: string;
  };
};

export type ContentDeactivateShareLinkEndpointResponse = void;

export type ContentDeactivateShareLinkEndpointError = HTTPValidationError;

export type ContentGetSharedContentEndpointData = {
  path: {
    /**
     * The unique share token
     */
    token: string;
  };
  query?: {
    /**
     * Password for protected content
     */
    password?: string | null;
  };
};

export type ContentGetSharedContentEndpointResponse = ContentItemPublic;

export type ContentGetSharedContentEndpointError = HTTPValidationError;

export type ImagesGetUploadUrlData = {
  body: PresignedURLRequest;
};

export type ImagesGetUploadUrlResponse = PresignedURLResponse;

export type ImagesGetUploadUrlError = HTTPValidationError;

export type ImagesCreateImageRecordData = {
  body: ImageCreate;
};

export type ImagesCreateImageRecordResponse = ImageResponse;

export type ImagesCreateImageRecordError = HTTPValidationError;

export type ImagesListImagesData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type ImagesListImagesResponse = Array<ImageResponse>;

export type ImagesListImagesError = HTTPValidationError;

export type ImagesReadImageData = {
  path: {
    image_id: string;
  };
};

export type ImagesReadImageResponse = ImageResponse;

export type ImagesReadImageError = HTTPValidationError;

export type ImagesDeleteImageData = {
  path: {
    image_id: string;
  };
};

export type ImagesDeleteImageResponse = ImageResponse;

export type ImagesDeleteImageError = HTTPValidationError;

export type DashboardAnalyzeQueryData = {
  body: SmartRoutingRequest;
};

export type DashboardAnalyzeQueryResponse = ApiResponse_SmartRoutingResponse_;

export type DashboardAnalyzeQueryError = HTTPValidationError;

export type DashboardGetDashboardMetricsResponse = ApiResponse_dict_str__Any__;

export type DashboardGetDashboardMetricsError = unknown;

export type DashboardGetRecentActivitiesData = {
  query?: {
    limit?: number;
  };
};

export type DashboardGetRecentActivitiesResponse =
  ApiResponse_list_dict_str__Any___;

export type DashboardGetRecentActivitiesError = HTTPValidationError;

export type DashboardConfirmRoutingData = {
  path: {
    route_id: string;
  };
  query: {
    confirmed: boolean;
  };
};

export type DashboardConfirmRoutingResponse = unknown;

export type DashboardConfirmRoutingError = HTTPValidationError;

export type DashboardCreateProjectData = {
  body: ProjectCreate;
};

export type DashboardCreateProjectResponse =
  app__schemas__common__ApiResponse_ProjectPublic_;

export type DashboardCreateProjectError = HTTPValidationError;

export type DashboardGetUserProjectsData = {
  query?: {
    include_inactive?: boolean;
    limit?: number;
    skip?: number;
  };
};

export type DashboardGetUserProjectsResponse =
  app__schemas__common__ApiResponse_ProjectsPublic_;

export type DashboardGetUserProjectsError = HTTPValidationError;

export type PrivateCreateUserData = {
  body: PrivateUserCreate;
};

export type PrivateCreateUserResponse = UserPublic;

export type PrivateCreateUserError = HTTPValidationError;
