// This file is auto-generated by @hey-api/openapi-ts

export type Token = {
  access_token: string;
  token_type: string;
};

export type Message = {
  message: string;
};

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type UserPublic = {
  email: string;
  is_active: boolean;
  is_superuser: boolean;
  full_name?: string | null;
  id: string;
};

export type UsersPublic = {
  data: Array<UserPublic>;
  count: number;
};

export type UserCreate = {
  email: string;
  is_active?: boolean;
  is_superuser?: boolean;
  full_name?: string | null;
  password: string;
};

export type UserRegister = {
  email: string;
  password: string;
  full_name?: string | null;
};

export type UserUpdate = {
  email?: string | null;
  is_active?: boolean;
  is_superuser?: boolean;
  full_name?: string | null;
  password?: string | null;
};

export type UserUpdateMe = {
  full_name?: string | null;
  email?: string | null;
};

export type UpdatePassword = {
  current_password: string;
  new_password: string;
};

export type NewPassword = {
  token: string;
  new_password: string;
};

export type ItemCreate = {
  title: string;
  description?: string | null;
};

export type ItemUpdate = {
  title?: string | null;
  description?: string | null;
};

export type ApiResponse<T> = {
  data: T | null;
  meta?: object | null;
  error?: string | null;
};

export type Body_login_access_token = {
  grant_type?: string | null;
  username: string;
  password: string;
  scope?: string;
  client_id?: string | null;
  client_secret?: string | null;
};

// API调用的请求和响应类型
export type LoginAccessTokenData = {
  body: Body_login_access_token;
};

export type LoginAccessTokenResponse = Token;

export type LoginAccessTokenError = HTTPValidationError;

export type TestTokenResponse = UserPublic;

export type RecoverPasswordData = {
  path: {
    email: string;
  };
};

export type RecoverPasswordResponse = Message;

export type RecoverPasswordError = HTTPValidationError;

export type ResetPasswordData = {
  body: NewPassword;
};

export type ResetPasswordResponse = Message;

export type ResetPasswordError = HTTPValidationError;

export type ReadUsersData = {
  query?: {
    skip?: number;
    limit?: number;
  };
};

export type ReadUsersResponse = UsersPublic;

export type ReadUsersError = HTTPValidationError;

export type CreateUserData = {
  body: UserCreate;
};

export type CreateUserResponse = UserPublic;

export type CreateUserError = HTTPValidationError;

export type ReadUserMeResponse = UserPublic;

export type UpdateUserMeData = {
  body: UserUpdateMe;
};

export type UpdateUserMeResponse = UserPublic;

export type UpdateUserMeError = HTTPValidationError;

export type DeleteUserMeResponse = Message;

export type UpdatePasswordMeData = {
  body: UpdatePassword;
};

export type UpdatePasswordMeResponse = Message;

export type UpdatePasswordMeError = HTTPValidationError;

export type RegisterUserData = {
  body: UserRegister;
};

export type RegisterUserResponse = UserPublic;

export type RegisterUserError = HTTPValidationError;

export type ReadUserByIdData = {
  path: {
    user_id: string;
  };
};

export type ReadUserByIdResponse = UserPublic;

export type ReadUserByIdError = HTTPValidationError;

export type UpdateUserData = {
  path: {
    user_id: string;
  };
  body: UserUpdate;
};

export type UpdateUserResponse = UserPublic;

export type UpdateUserError = HTTPValidationError;

export type DeleteUserData = {
  path: {
    user_id: string;
  };
};

export type DeleteUserResponse = Message;

export type DeleteUserError = HTTPValidationError;

export type ReadItemsData = {
  query?: {
    skip?: number;
    limit?: number;
  };
};

export type ReadItemsResponse = ApiResponse<Array<any>>;

export type ReadItemsError = HTTPValidationError;

export type CreateItemData = {
  body: ItemCreate;
};

export type CreateItemResponse = ApiResponse<any>;

export type CreateItemError = HTTPValidationError;

export type ReadItemData = {
  path: {
    id: string;
  };
};

export type ReadItemResponse = ApiResponse<any>;

export type ReadItemError = HTTPValidationError;

export type UpdateItemData = {
  path: {
    id: string;
  };
  body: ItemUpdate;
};

export type UpdateItemResponse = ApiResponse<any>;

export type UpdateItemError = HTTPValidationError;

export type DeleteItemData = {
  path: {
    id: string;
  };
};

export type DeleteItemResponse = ApiResponse<null>;

export type DeleteItemError = HTTPValidationError;

