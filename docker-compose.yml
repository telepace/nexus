services:

  db:
    image: postgres:17
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-telepace}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-app}

  adminer:
    image: adminer
    restart: always
    networks:
      - traefik-public
      - default
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.${STACK_NAME:-nexus}-adminer-http.rule=Host(`adminer.${DOMAIN:-localhost.nip.io}`)
      - traefik.http.routers.${STACK_NAME:-nexus}-adminer-http.entrypoints=http
      - traefik.http.routers.${STACK_NAME:-nexus}-adminer-http.middlewares=https-redirect
      - traefik.http.routers.${STACK_NAME:-nexus}-adminer-https.rule=Host(`adminer.${DOMAIN:-localhost.nip.io}`)
      - traefik.http.routers.${STACK_NAME:-nexus}-adminer-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME:-nexus}-adminer-https.tls=true
      - traefik.http.routers.${STACK_NAME:-nexus}-adminer-https.tls.certresolver=le
      - traefik.http.services.${STACK_NAME:-nexus}-adminer.loadbalancer.server.port=${ADMINER_CONTAINER_PORT:-8080}

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    networks:
      - traefik-public
      - default
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@telepace.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-telepace}
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.${STACK_NAME:-nexus}-pgadmin-http.rule=Host(`pgadmin.${DOMAIN:-localhost.nip.io}`)
      - traefik.http.routers.${STACK_NAME:-nexus}-pgadmin-http.entrypoints=http
      - traefik.http.routers.${STACK_NAME:-nexus}-pgadmin-http.middlewares=https-redirect
      - traefik.http.routers.${STACK_NAME:-nexus}-pgadmin-https.rule=Host(`pgadmin.${DOMAIN:-localhost.nip.io}`)
      - traefik.http.routers.${STACK_NAME:-nexus}-pgadmin-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME:-nexus}-pgadmin-https.tls=true
      - traefik.http.routers.${STACK_NAME:-nexus}-pgadmin-https.tls.certresolver=le
      - traefik.http.services.${STACK_NAME:-nexus}-pgadmin.loadbalancer.server.port=80

  prestart:
    image: '${DOCKER_IMAGE_BACKEND:-telepace/nexus-backend}:${TAG:-latest}'
    build:
      context: ./backend
    networks:
      - traefik-public
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: bash scripts/prestart.sh
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN:-localhost.nip.io}
      - FRONTEND_HOST=${FRONTEND_HOST:-http://localhost:5173}
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS:-http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://localhost.nip.io}
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER:-admin@telepace.com}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD:-telepace}
      - SMTP_HOST=${SMTP_HOST:-smtp.example.com}
      - SMTP_USER=${SMTP_USER:-telepace}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-telepace}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL:-noreply@yourdomain.com}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-app}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-telepace}
      - SENTRY_DSN=${SENTRY_DSN:-}

  backend:
    image: '${DOCKER_IMAGE_BACKEND:-telepace/nexus-backend}:${TAG:-latest}'
    restart: always
    networks:
      - traefik-public
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN:-localhost.nip.io}
      - FRONTEND_HOST=${FRONTEND_HOST:-http://localhost:5173}
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS:-http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://localhost.nip.io}
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER:-admin@telepace.com}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD:-telepace}
      - SMTP_HOST=${SMTP_HOST:-smtp.example.com}
      - SMTP_USER=${SMTP_USER:-telepace}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-telepace}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL:-noreply@yourdomain.com}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-app}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-telepace}
      - SENTRY_DSN=${SENTRY_DSN:-}
      - SUPABASE_URL=${SUPABASE_URL:-}

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5

    build:
      context: ./backend
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.${STACK_NAME:-nexus}-backend.loadbalancer.server.port=${BACKEND_CONTAINER_PORT:-8000}

      - traefik.http.routers.${STACK_NAME:-nexus}-backend-http.rule=Host(`api.${DOMAIN:-localhost.nip.io}`)
      - traefik.http.routers.${STACK_NAME:-nexus}-backend-http.entrypoints=http

      - traefik.http.routers.${STACK_NAME:-nexus}-backend-https.rule=Host(`api.${DOMAIN:-localhost.nip.io}`)
      - traefik.http.routers.${STACK_NAME:-nexus}-backend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME:-nexus}-backend-https.tls=true
      - traefik.http.routers.${STACK_NAME:-nexus}-backend-https.tls.certresolver=le

      # Enable redirection for HTTP and HTTPS
      - traefik.http.routers.${STACK_NAME:-nexus}-backend-http.middlewares=https-redirect

  frontend:
    image: '${DOCKER_IMAGE_FRONTEND:-telepace/nexus-frontend}:${TAG:-latest}'
    restart: always
    networks:
      - traefik-public
      - default
    build:
      context: ./frontend
      args:
        - VITE_API_URL=https://api.${DOMAIN:-localhost.nip.io}
        - NODE_ENV=${NODE_ENV:-production}
    environment:
      - VITE_API_URL=${PRODUCTION_API_URL:-https://api.${DOMAIN:-localhost.nip.io}}
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.${STACK_NAME:-nexus}-frontend.loadbalancer.server.port=${FRONTEND_CONTAINER_PORT:-80}

      - traefik.http.routers.${STACK_NAME:-nexus}-frontend-http.rule=Host(`dashboard.${DOMAIN:-localhost.nip.io}`)
      - traefik.http.routers.${STACK_NAME:-nexus}-frontend-http.entrypoints=http

      - traefik.http.routers.${STACK_NAME:-nexus}-frontend-https.rule=Host(`dashboard.${DOMAIN:-localhost.nip.io}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.rule=Host(`dashboard.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls.certresolver=le

      # Enable redirection for HTTP and HTTPS
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.middlewares=https-redirect
volumes:
  app-db-data:
  pgadmin-data:

networks:
  traefik-public:
    # Allow setting it to false for testing
    external: true
